
#The first function, makeVector creates a special "vector", which is really a list containing a function to

#    set the value of the vector
#    get the value of the vector
#    set the value of the transpose
#    get the value of the transpose

makeCacheMatrix <- function(x = matrix()) {
        m <- NULL
        set <- function(y) {
                x <<- y
                m <<- NULL
        }
        get <- function() x
        setSolve <- function(transpose) m <<- transpose
        getSolve <- function() m
        list(set = set, get = get,
             setSolve = setSolve,
             getSolve = getSolve)
}

#The following function calculates the transpose of the special "vector" created with the above function
cacheSolve <- function(x, ...) {
        m <- x$getSolve()
        if(!is.null(m)) {
                message("getting cached data")
                return(m)
        }
        data <- x$get()
        m <- solve(data, ...)
        x$setSolve(m)
        m
}
